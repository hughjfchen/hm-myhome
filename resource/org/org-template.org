#+Title: My Document, My Way
#+Author: Chen Jin Fen
#+Date: 2024年9月20日
#+OPTIONS: ^:{}
#+OPTIONS: H:9
#+OPTIONS: toc:9
#+LANG: zh_CN
#+PANDOC_OPTIONS: lua-filter:../pandoc/pandoc-filter-abstract-section.lua
#+PANDOC_OPTIONS: reference-doc:../pandoc/pandoc-reference.docx
#+PANDOC_OPTIONS: toc:t
#+PANDOC_METADATA: toc-title:目录
#+PANDOC_METADATA: abstract-title:文档信息
#+PANDOC_VARIABLES: lang:zh_CN

* Abstract

+-------------------+----------------+-------+---------+-------+----------+----------+----------+
| 撰写人            |                | 日期  |         | 页码  | 共 X 页  |  版本号  |          |
+-------------------+----------------+-------+---------+-------+----------+----------+----------+
|                                             审核                                              |
+-------------------+----------------+------+---+--------------+---------+--------+-------------+
| 用户代表          |                |签字：                   |     年 月 日                   |
+-------------------+----------------+------+---+--------------+---------+--------+-------------+
| 部门内部审核      | 详见《xxxxxxxxxxxx报告》                                                  |
+-------------------+------------------------+------+---+------+---------+--------+-------------+
|                                             审批                                              |
+-------------------+----------------+------+---+--------------+---------+--------+-------------+
| 项目经理/部门经理 |                |签字：                   |     年 月 日                   |
+-------------------+----------------+------+---+--------------+---------+--------+-------------+

* 前言

** 目的

本文档记录说明xxxxx项目的单元测试的测试原则、测试方法、测试过程和测试总结，以作为后续进行系统
开发测试的依据，同时也为相关人员评审、验收项目提供依据。

** 范围

本文档主要说明xxxxxxx项目中xxxxx模块的单元测试总结报告，覆盖xxx模块的各个消息流中的业务处理相关节点。

** 定义、缩写词

本文档涉及到的名词缩写说明如下：
- xxxx :: ddddxxxxx
- EDI :: Eletric Data Interchange
- EDIFACT :: 电子数据交换的标准协议

* 一般结构

以下是列表：
- 列表项一
- 列表项二

以下是连接：

#+CAPTION: 插入图一
#+NAME: fig:fig-name01
[[./TCP_close_diagram.svg]]

以下是有序列表：
1. 步骤一
2. 步骤二
3. 步骤三

* 表格

表格演示。

#+CAPTION: 表格一
#+NAME: tbl:table-name01
|--------+----------+------+--------------+------------+------|
| case # | case说明 | 输入 | 期望输出     | 实际输出   | 结果 |
|--------+----------+------+--------------+------------+------|
|      1 | case 1   | 正常 | 输出结果描述 | 与期望符合 | 通过 |
|--------+----------+------+--------------+------------+------|

* 代码

** 模块和引用

模块定义如下；

#+NAME: module1
#+begin_src sh :tangle no
echo "this is module1"
#+end_src

以下是引用上述模块：

#+begin_src sh :tangle <path-to-script> :noweb yes :no-expand :comments org
<<module1>>

#+end_src

** tangle

如果不想某些代码块在生成代码（tangle）的过程中导出，把该段模块的
tangle 属性设为 no。

* 插图

** 结构图

以下是基于 plantuml 的结构图。

#+begin_src  plantuml :file plantuml_Components.svg

skinparam defaultFontName "Noto Sans Mono CJK SC"

package "处理域" {
  [处理域1] as D1toD2
  [处理域2] as D2toD1
}

package "Common" {
  [生成日志信息] as GenLog
  [发送日志信息] as SendLog
  [通用错误处理] as ErrorHandler
  [日志处理] as LogHandler
  [告警通知处理] as AlertHandler

}

note top of LogHandler: 日志处理组件由于其功能独立性，\n故移到通用组件域。

D1toD2 ..> GenLog
D1toD2 ..> SendLog
D1toD2 ..> ErrorHandler

D2toD1 ..> GenLog
D2toD1 ..> SendLog
D2toD1 ..> ErrorHandler
#+end_src

#+CAPTION: 组件及其关系图
#+NAME: fig:plantuml_Components
#+RESULTS:
[[file:plantuml_Components.svg]]

** plot

以下是基于 gnuplot 的数据图。

首先需要有一个提供给plot的数据表格。

#+NAME: data-tbl
#+CAPTION: 统计表
| 检查项   | 发现问题数 |
|----------+------------|
| 运行环境 |          0 |
| 参数配置 |          0 |
| 运维实践 |          0 |
| 运行状态 |          0 |
| 运行报错 |          4 |

#+BEGIN_SRC gnuplot :var data=data-tbl :results output :exports results :file ./output-plot.svg :cache true
reset

set boxwidth 0.5
set grid ytics linestyle 0
set style fill solid 0.20 border

set terminal svg size 1200,800 font "Noto Sans Mono CJK SC,24"

set title "检查结果统计"
set xlabel "检查项"
set ylabel "发现问题数"

set yrange [0:10]
plot data using 2:xticlabels(1) with boxes lc rgb "#0045FF" title "问题数"

#+END_SRC

#+CAPTION: 检查结果统计图
#+RESULTS:
[[file:./output-plot.svg]]

** free-draw

以下是基于 pikchr 和 ditta 的手绘图。

#+begin_src pikchr :results output :exports results :file ./output-pikchr.svg
   arrow right 200% "Markdown" "源码"
   box rad 10px "Markdown" "Formatter" "(markdown.c)" fit
   arrow right 200% "HTML+SVG" "输出"
   arrow <-> down 70% from last box.s
   box same "Pikchr" "Formatter" "(pikchr.c)" fit
#+end_src

#+CAPTION: pikchr图
#+RESULTS:
[[file:./output-pikchr.svg]]
